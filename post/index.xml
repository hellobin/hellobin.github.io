<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 不足为外人道</title>
    <link>http://luobin.me/post/</link>
    <description>Recent content in Posts on 不足为外人道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Apr 2014 22:13:13 +0800</lastBuildDate>
    <atom:link href="http://luobin.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>centos下源码安装php5.3.24注意事项</title>
      <link>http://luobin.me/post/centos%E4%B8%8B%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85php5.3.24%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Mon, 14 Apr 2014 22:13:13 +0800</pubDate>
      
      <guid>http://luobin.me/post/centos%E4%B8%8B%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85php5.3.24%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>&lt;p&gt;1.注意事项.&lt;br /&gt;
 &amp;emsp;&amp;emsp;需要先安装libxml2 和 libxml2-devel&lt;/p&gt;

&lt;p&gt;2.php.ini的路径&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;在Unix上，php.ini文件缺省放在/usr/local/lib上面，因为缺省的存放路径是/lib，但是可以在编译的时候使用&amp;ndash;with-config-file-path参数 来修改php.ini的存放位置，例如你可以使用&amp;ndash;with-config-file-path=/etc把它存放到/etc下面，然后可以从源码包中拷贝php.ini-develop 或者 php.ini-product到/etc/php.ini并修改使之满足需要。&lt;/p&gt;

&lt;p&gt;3.安装php的mcrypt扩展(动态加载编译)&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;执行 &lt;code&gt;yum list installed|grep mcrypt&lt;/code&gt;查看mcrypt及依赖库是否安装，没有的话执行 &lt;code&gt;yum -y install libmcrypt libmcrypt-devel mcrypt mhash&lt;/code&gt;安装&lt;/p&gt;

&lt;p&gt;下载php下的mcrypt扩展或者直接下载php的完整安装包,切换到php代码下的 ext/mcrypt目录&lt;/p&gt;

&lt;p&gt;执行phpize命令（phpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块）&lt;/p&gt;

&lt;p&gt;执行完后，会发现当前目录下多了一些configure文件，&lt;/p&gt;

&lt;p&gt;执行&lt;br /&gt;
&lt;code&gt;./configure --with-php-config=/usr/local/bin/php-config&lt;/code&gt; //根据具体的安装路径&lt;/p&gt;

&lt;p&gt;然后&lt;code&gt;make &amp;amp;&amp;amp; make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最后出现提示：&lt;br /&gt;
&lt;code&gt;Installing shared extensions: /path&lt;/code&gt; //path可在 php-config 中的extension_dir处设置&lt;/p&gt;

&lt;p&gt;接下来在php.ini 中修改&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;extension_dir=/path
extension=mcrypt.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.在安装gd扩展的时候 如果出现 &lt;code&gt;configure: error: png.h not found.&lt;/code&gt;的错误&lt;/p&gt;

&lt;p&gt;需要安装一下 libpng-devel&lt;br /&gt;
&lt;code&gt;yum -y install libpng-devel&lt;/code&gt; 即可&lt;/p&gt;

&lt;p&gt;5.在安装curl扩展的时候如果出现：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;configure: error: Please reinstall the libcurl distribution -
easy.h should be in /include/curl/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决办法同4，安装一下curl的devel包就ok了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum -y install curl-devel    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6.在用phpmyadmin导入数据经常会出现提示:*没有接收到要导入的数据*。&lt;br /&gt;
&amp;emsp;&amp;emsp;可能是文件名没有提交，也可能是文件大小超出 PHP 限制。phpmyadmin在选择文件时会有最大限制的提示，对比下待导入数据的大小，然后打开php.ini,查找“upload_max_filesize”关键字，将其修改为比待导入数据稍大些的值，然后重启 web服务器即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>magento 1.7.02安装问题</title>
      <link>http://luobin.me/post/magento-1.7.02%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 13 Apr 2014 22:40:08 +0800</pubDate>
      
      <guid>http://luobin.me/post/magento-1.7.02%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;&amp;emsp;&amp;emsp;很明显错误的提示是当前数据库不支持InnoDB storage engine，但是通过show engines命令以及phpinfo()函数查看，mysql的InnodB都是正常的，后来搜到magento中文社区的一篇文章原文链接&lt;a href=&#34;http://www.magentochina.org/blog/install-magento-on-mysql-5-6&#34;&gt;http://www.magentochina.org/blog/install-magento-on-mysql-5-6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原因是Mysql 5.6.1版本已经已经丢弃了“have_innodb”这个函数.而Magento1.7.0.2以下，&lt;/p&gt;

&lt;p&gt;都是使用该函数检测Mysql是否激活了InnodB引擎。而我的数据库版本正好是5.6.10&lt;/p&gt;

&lt;p&gt;按照文章中的修改方法&lt;/p&gt;

&lt;p&gt;在文件app/code/core/Mage/Install/Model/Installer/Db/Mysql4.php&lt;/p&gt;

&lt;p&gt;找到以下代码
    $variables  = $this-&amp;gt;_getConnection()-&amp;gt;fetchPairs(&amp;lsquo;SHOW VARIABLES&amp;rsquo;);
在其后加上:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (!isset($variables[&#39;have_innodb&#39;])) 
{
    $engines = $this-&amp;gt;_getConnection()-&amp;gt;fetchPairs(&#39;SHOW ENGINES&#39;);        
    return (isset($engines[&#39;InnoDB&#39;]) &amp;amp;&amp;amp; ($engines[&#39;InnoDB&#39;] == &#39;DEFAULT&#39; || $engines[&#39;InnoDB&#39;] == &#39;YES&#39;);
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原来的return语句注释掉或者保留都不会影响。&lt;/p&gt;

&lt;p&gt;刷新一下即可继续正常安装了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>centos的逆袭</title>
      <link>http://luobin.me/post/centos%E7%9A%84%E9%80%86%E8%A2%AD/</link>
      <pubDate>Sat, 08 Mar 2014 22:52:24 +0800</pubDate>
      
      <guid>http://luobin.me/post/centos%E7%9A%84%E9%80%86%E8%A2%AD/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://user-image.logdown.io/user/1175/blog/1158/post/98892/NdKBG3eTS2mFhnM7n1IS_centos.png&#34; alt=&#34;centos.png&#34; /&gt;&lt;br /&gt;
&amp;emsp;&amp;emsp;最近想用python搭个网站，研究了目前主流服务器的配置，最后操作系统决定选择CentOs，为什么选它呢：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;免费&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;稳定&lt;/li&gt;
&lt;li&gt;以前用过，容易上手和维护~&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;这里简单介绍一下吧，有需求的同学可以参考&lt;br /&gt;
&amp;emsp;&amp;emsp;CentOS的英文全称是Community Enterprise Operating System,翻译一下就是社区版企业操作系统，Linux的众多发行版之一，是由Red Hat Enterprise Linux（大名鼎鼎的小红帽）的开源代码重新修改编译而成。用时下比较流行的一个词语就是CentOS其实就是一个彻头彻尾的山寨版 RHEL，而且人家还是完全合法的山寨。众所周知Linux的内核发布遵循GNU的GPL开源协议，红帽在linux内核的基础上开发面向企业用户的linux发行版，其所有的源代码也必须开源RHEL高度的稳定性和安全性在服务器领域是有口皆碑的。所以提到CentOS不能不介绍下RHEL。&lt;br /&gt;
&amp;emsp;&amp;emsp;RHEL（Red Hat Enterprise Linux）是由RedHat公司在linux内核的基础上开发的面向企业用户的众多linux发行版之一 ，由于其强大的安全性和高度的稳定性，在web服务器端被广泛使用。RHEL在发行的时候，有两种方式，一种是二进制的发行方式，另外一种是源代码的发行方式。无论是哪一种发行方式，你都可以免费获得（例如从网上下载），并再次发布。但如果你使用了他们的在线升级（包括补丁）或咨询服务，就必须要付费（这也是红帽的主要盈利模式）。RHEL 一直都提供源代码的发行方式，CentOS 就是将 RHEL 发行的源代码去掉RedHat商标之后重新编译一次，形成一个可使用的二进制版本。由于 LINUX 的源代码是 GNU，所以从获得 RHEL 的源代码到编译成新的二进制，都是合法的。只是 REDHAT 是商标，所以必须在新的发行版里将 REDHAT 的商标去掉。REDHAT 对这种发行版的态度是：&amp;rdquo;我们其实并不反对这种发行版，真正向我们付费的用户，他们重视的并不是系统本身，而是我们所提供的商业服务。&amp;rdquo; 所以，CentOS 可以得到 RHEL 的所有功能，甚至是更好的软件。但 CentOS 并不向用户提供商业支持，当然也不负上任何商业责任。如果你要将你的 RHEL 转到 CentOS 上，因为你不希望为 RHEL 升级而付费。当然，你必须有丰富 linux 使用经验，因此 RHEL 的商业技术支持对你来说并不重要。但如果你是单纯的业务型企业，那么还是建议你选购 RHEL 软件并购买相应服务。这样可以节省你的 IT 管理费用，并可得到专业服务。一句话，选用 CentOS 还是 RHEL，取决于你所在公司是否拥有相应的技术力量。&lt;br /&gt;
               &lt;img src=&#34;http://user-image.logdown.io/user/1175/blog/1158/post/98892/uz90Xz8IQX6aA9r92F1q_linux-marketshare2.jpg&#34; alt=&#34;linux-marketshare2.jpg&#34; /&gt;&lt;br /&gt;
               &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp; &amp;emsp;&amp;emsp;&amp;emsp;图 linux阵营里各发行版在服务器端的市场份额&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;从渊源上讲CentOS和RHEL完全是一奶同胞的亲兄弟，差别只是RHEL有红帽这个有钱的干爹。从份额上看为什么傍干爹的RHEL干不过自生自灭的CentOS，老湿窃以为有几个原因：1.RHEL虽然根正苗红，而且有正规的技术支持和商业服务，但是服务费用确实有点高哈，号称每台一年的服务费用1000刀，对于有几十上百台服务器的用户来讲这是笔不小的预算，高富帅才玩得起；2.对于服务器而言可靠性和稳定性非常重要,RHEL每五年左右更新一次，在系统的稳定性和安全性上有着极大的优势，但是对许多服务不利，比如MySQL和PHP等工具，它们在这五年的发布周期中可能会进行繁重的开发和大量的修改，尽管YUM工具的出现已经解决了软件包的更新问题，但是由于CentOS滞后于RHEL发布，这一过程中可能会修复一些最新版RHEL中的已知小bug,这也算是CentOS的一个优势；3.其它发行版本诸如fedora、Ubuntu等在作为服务器在稳定上与这二位相比还是略逊一筹; 3.CentOS 是RHEL的克隆版，如果需要可以随时平滑切换到 RHEL，从而享受红帽的服务支持。&lt;br /&gt;
&amp;emsp;&amp;emsp;所以从创业的角度看，CentOS作为服务器无疑是首选，性价比最高，而且创业成功屌丝逆袭之后需要相应的技术支持和商业服务来降低运营风险时也可以很方便平稳的过渡到RHEL，傍上红帽这棵大树。一句话，选用 CentOS 还是 RHEL，不仅仅取决于你所在公司是否拥有相应的技术力量，还取决于一旦出了问题能不能找到个背黑锅的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>centos搭建svn服务器</title>
      <link>http://luobin.me/post/centos%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Tue, 18 Feb 2014 21:43:12 +0800</pubDate>
      
      <guid>http://luobin.me/post/centos%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;首先安装subversion，直接：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum -y install subversion 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;svnserve --version&lt;/code&gt; 查看 返回版本号说明安装成功&lt;/p&gt;

&lt;p&gt;建立svn库,执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svnadmin create /opt/svn/kuyustore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行上面的命令后，自动在kuyustore下建立多个文件， 分别是conf, db,format,hooks, locks, README.txt。&lt;/p&gt;

&lt;p&gt;配置svnserve&lt;/p&gt;

&lt;p&gt;进入上面生成conf目录， 有以下几个文件:&lt;/p&gt;

&lt;p&gt;authz, passwd, svnserve.conf&lt;/p&gt;

&lt;p&gt;其中authz 配置用户权限，设置哪些用户可以读写哪些目录,passwd是设置用户和密码的, svnserve是主配置文件设置svn相关的操作。&lt;/p&gt;

&lt;p&gt;passwd文件:&lt;/p&gt;

&lt;p&gt;[users]&lt;/p&gt;

&lt;p&gt;# 用户名 =密码&lt;/p&gt;

&lt;p&gt;kuyu=123456&lt;/p&gt;

&lt;p&gt;以上表示建立了用户kuyu，注意行首不能有空格&lt;/p&gt;

&lt;p&gt;authz文件：&lt;/p&gt;

&lt;p&gt;[/]&lt;/p&gt;

&lt;p&gt;kuyu= rw&lt;/p&gt;

&lt;p&gt;。。。&lt;/p&gt;

&lt;p&gt;意思是用户kuyu对所有的目录有读写权限&lt;/p&gt;

&lt;p&gt;svnserve.conf文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[general]

auth-access = write
password-db = passwd
authz-db = authz
realm = kuyustore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动svn服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svnserve -d -r /opt/svn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后就可以通过TortoiseSVN客户端输入 svn://ip/kuyustore 链接svn服务了。虽然git等分布式版本控制工具是大势所趋，但是使用svn进行版本管理相对git来讲有以下优势&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;相对简单，比git学习成本低。&lt;/li&gt;
&lt;li&gt;权限控制比git好，可以精确控制目录权限&lt;/li&gt;
&lt;li&gt;svn支持空目录，windows平台有较好的支持&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>“名不副实”的JSON</title>
      <link>http://luobin.me/post/%E5%90%8D%E4%B8%8D%E5%89%AF%E5%AE%9E%E7%9A%84JSON/</link>
      <pubDate>Wed, 15 May 2013 09:21:14 +0800</pubDate>
      
      <guid>http://luobin.me/post/%E5%90%8D%E4%B8%8D%E5%89%AF%E5%AE%9E%E7%9A%84JSON/</guid>
      <description>&lt;p&gt;JSON (Javascript Object Notation):直接翻译就是javascript的对象表示方法。是一种轻量级的数据交换格式。 易于人阅读和编写。同时也易于机器解析和生成。 它基于JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言。也就是说现在的JSON俨然已经“名不副实”了&lt;/p&gt;

&lt;p&gt;JSON的特点:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JSON 是纯文本&lt;/li&gt;
&lt;li&gt;JSON 具有“自我描述性”（人类可读）&lt;/li&gt;
&lt;li&gt;JSON 具有层级结构（值中存在值）&lt;/li&gt;
&lt;li&gt;JSON 可通过 JavaScript 进行解析&lt;/li&gt;
&lt;li&gt;JSON 数据可使用 AJAX 进行传输&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;与 XML相比:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;没有结束标签&lt;/li&gt;
&lt;li&gt;更短&lt;/li&gt;
&lt;li&gt;读写的速度更快&lt;/li&gt;
&lt;li&gt;能够使用内建的 JavaScript eval() 方法进行解析&lt;/li&gt;
&lt;li&gt;使用数组&lt;/li&gt;
&lt;li&gt;不使用保留字&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;正因为如此JSON大有取缔XML之势&lt;/p&gt;

&lt;p&gt;JSON 的语法规则&lt;/p&gt;

&lt;p&gt;JSON 语法是 JavaScript 对象表示法语法的子集。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;数据在名称/值对中&lt;/li&gt;
&lt;li&gt;数据由逗号分隔&lt;/li&gt;
&lt;li&gt;花括号保存对象&lt;/li&gt;
&lt;li&gt;方括号保存数组&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example 1.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;employees&amp;quot;: [
    { &amp;quot;firstName&amp;quot;:&amp;quot;Bill&amp;quot; , &amp;quot;lastName&amp;quot;:&amp;quot;Gates&amp;quot; },
    { &amp;quot;firstName&amp;quot;:&amp;quot;George&amp;quot; , &amp;quot;lastName&amp;quot;:&amp;quot;Bush&amp;quot; },
    { &amp;quot;firstName&amp;quot;:&amp;quot;Thomas&amp;quot; , &amp;quot;lastName&amp;quot;:&amp;quot;Carter&amp;quot; }
     ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个 employee 对象是包含 3 个员工记录（对象）的数组&lt;/p&gt;

&lt;p&gt;JSON 值可以是：
    数字（整数或浮点数）
    字符串（在双引号中）
    逻辑值（true 或 false）
    数组（在方括号中）
    对象（在花括号中）
    null
因为 JSON 使用 JavaScript 语法，所以无需额外的软件就能处理 JavaScript 中的 JSON。
通过 JavaScript，您可以创建一个对象数组，并像这样进行赋值：&lt;/p&gt;

&lt;p&gt;Example 2.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var employees = [
{ &amp;quot;firstName&amp;quot;:&amp;quot;Bill&amp;quot; , &amp;quot;lastName&amp;quot;:&amp;quot;Gates&amp;quot; },
{ &amp;quot;firstName&amp;quot;:&amp;quot;George&amp;quot; , &amp;quot;lastName&amp;quot;:&amp;quot;Bush&amp;quot; },
{ &amp;quot;firstName&amp;quot;:&amp;quot;Thomas&amp;quot; , &amp;quot;lastName&amp;quot;: &amp;quot;Carter&amp;quot; }
];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以像这样访问 JavaScript 对象数组中的第一项：&lt;code&gt;employees[0].lastName;&lt;/code&gt;
返回的内容是：Gates&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>centos下mysql5.6.10源码安装</title>
      <link>http://luobin.me/post/centos%E4%B8%8Bmysql5.6.10%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 06 Apr 2013 22:33:21 +0800</pubDate>
      
      <guid>http://luobin.me/post/centos%E4%B8%8Bmysql5.6.10%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;p&gt;从mysql5.5起，mysql源码安装开始使用cmake了，所以首先要安装cmake
可以用命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    rpm -qa | grep cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询当前系统有没有安装查cmake。&lt;/p&gt;

&lt;p&gt;下载解压安装cmake&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#tar -zvxf cmake-2.8.3.tar.gz
#cd cmake-2.8.3
#./configure
#make
#make install 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可能会出现没有C++编译器的错误，默认的gcc默认没有支持c++，使用以下语句安装
    #yum -y install gcc-c++&lt;/p&gt;

&lt;p&gt;执行源码编译配置脚本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmake \
-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \
-DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock \
-DDEFAULT_CHARSET=utf8 \
-DDEFAULT_COLLATION=utf8_general_ci \
-DWITH_MYISAM_STORAGE_ENGINE=1 \
-DWITH_INNOBASE_STORAGE_ENGINE=1 \
-DWITH_ARCHIVE_STORAGE_ENGINE=1 \
-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
-DWITH_MEMORY_STORAGE_ENGINE=1 \
-DWITH_READLINE=1 \
-DENABLED_LOCAL_INFILE=1 \
-DMYSQL_DATADIR=/db/mysql/data \
-DMYSQL_USER=mysql \
-DMYSQL_TCP_PORT=3306
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果出现以下错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmake .
-- MySQL 5.5.8
-- Could NOT find Curses (missing:  CURSES_LIBRARY  CURSES_INCLUDE_PATH)
CMake Error at cmake/readline.cmake:82 (MESSAGE):
Curses library not found.  Please install appropriate package,。。。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行 yum -y install ncurses-devel 命令，然后删除生成的CMakeCache.txt文件，重新执行cmake&lt;/p&gt;

&lt;p&gt;执行 &lt;code&gt;＃make  &amp;amp;&amp;amp; make install&lt;/code&gt; 编译安装&lt;/p&gt;

&lt;p&gt;在运行mysqld的时候可能会遇到类似：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’ (2) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样的错误，只需重新确认一下mysql.sock文件的路径，在/etc/my.cnf 文件中设施一下socket=path即可。
对于mysqladmin，同样需要在/etc/my.cnf 文件中[mysqladmin]下设置socket 路径&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>win7下开启具有管理员权限的命令行窗口</title>
      <link>http://luobin.me/post/win7%E4%B8%8B%E5%BC%80%E5%90%AF%E5%85%B7%E6%9C%89%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AA%97%E5%8F%A3/</link>
      <pubDate>Sun, 13 Jan 2013 22:19:53 +0800</pubDate>
      
      <guid>http://luobin.me/post/win7%E4%B8%8B%E5%BC%80%E5%90%AF%E5%85%B7%E6%9C%89%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AA%97%E5%8F%A3/</guid>
      <description>&lt;p&gt;&amp;emsp;&amp;emsp;使用vim在win7下敲代码的时候，发现最后保存的时候提示错误 ：E212：无法打开并写入文件，很是奇怪&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;不论是新建文件还是编辑已有的文件，问题现象一致，猜想应该是所在目录的权限设置问题。但是问题又只在&lt;/p&gt;

&lt;p&gt;通过cmd窗口启动vim时才会出现，使用右键&amp;ndash;&amp;gt;vim编辑打开文件是ok的，查了一下，原来Windows7在开启&lt;/p&gt;

&lt;p&gt;UAC的情况下使用运行启动的cmd.exe是没有管理员权限的。而我的系统文件夹均是在图形界面下创建的，默认是&lt;/p&gt;

&lt;p&gt;管理员，其他用户没有写的权限。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;那么，如何使用管理员权限启动cmd或者其他程序呢，一个简单的方法是：&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;&lt;em&gt;在开始菜单的搜索框里输入cmd或者你要运行的程序名称，然后按下ctrl + shift + enter&lt;/em&gt; 即可&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>windows下为有道添加星际译王词典</title>
      <link>http://luobin.me/post/windows%E4%B8%8B%E4%B8%BA%E6%9C%89%E9%81%93%E6%B7%BB%E5%8A%A0%E6%98%9F%E9%99%85%E8%AF%91%E7%8E%8B%E8%AF%8D%E5%85%B8/</link>
      <pubDate>Thu, 16 Feb 2012 22:29:34 +0800</pubDate>
      
      <guid>http://luobin.me/post/windows%E4%B8%8B%E4%B8%BA%E6%9C%89%E9%81%93%E6%B7%BB%E5%8A%A0%E6%98%9F%E9%99%85%E8%AF%91%E7%8E%8B%E8%AF%8D%E5%85%B8/</guid>
      <description>&lt;p&gt;&amp;emsp;&amp;emsp;windows下一直使用有道词典，缺陷没有离线词库。今天终于找到让有道词典可以支持离线的方法，那就是给其添加大名鼎鼎的星际译王的词典（其实星际译王也有windows版的）。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;到这里&lt;a href=&#34;http://abloz.com/huzheng/stardict-dic/zh_CN/&#34;&gt;下载&lt;/a&gt;自己需要的词典&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下载的文件默认是tar.bz2格式，一种linux的文件打包压缩格式（因为星际诞生于gnu/linux平台）。有道并不支持这种压缩的格式，需要解压。用winrar，等很多解压缩软件都可以。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;解压出来，后缀为dz,idx,ifo三个文件。建议将其全部拷贝到X:/Program Files/Youdao/DeskDict2/localdicts  （X为你的有道安装目录）。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;四 打开有道桌面词典，按照下面的顺序操作：选项…-&amp;gt;词典管理-&amp;gt;添加，找到刚刚解压缩获得的文件夹里的ifo格式的文件，确认后添加&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;现在可以方便的使用有道词典离线查词啦&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>