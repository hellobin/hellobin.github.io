<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on 不足为外人道</title>
    <link>/tags/php/</link>
    <description>Recent content in Php on 不足为外人道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2013 22:13:13 +0800</lastBuildDate>
    
	<atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>centos下源码安装php5.3.24注意事项</title>
      <link>/post/centos%E4%B8%8B%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85php5.3.24%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Sun, 14 Apr 2013 22:13:13 +0800</pubDate>
      
      <guid>/post/centos%E4%B8%8B%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85php5.3.24%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>1.注意事项.
&amp;emsp;&amp;emsp;需要先安装libxml2 和 libxml2-devel
2.php.ini的路径
&amp;emsp;&amp;emsp;在Unix上，php.ini文件缺省放在/usr/local/lib上面，因为缺省的存放路径是/lib，但是可以在编译的时候使用&amp;ndash;with-config-file-path参数 来修改php.ini的存放位置，例如你可以使用&amp;ndash;with-config-file-path=/etc把它存放到/etc下面，然后可以从源码包中拷贝php.ini-develop 或者 php.ini-product到/etc/php.ini并修改使之满足需要。
3.安装php的mcrypt扩展(动态加载编译)
&amp;emsp;&amp;emsp;执行 yum list installed|grep mcrypt查看mcrypt及依赖库是否安装，没有的话执行 yum -y install libmcrypt libmcrypt-devel mcrypt mhash安装。下载php下的mcrypt扩展或者直接下载php的完整安装包,切换到php代码下的 ext/mcrypt目录执phpize命令（phpize是用来扩展php扩展模块的，通过phpize可以建立php的外挂模块）执行完后，会发现当前目录下多了一些configure文件，执行:
./configure --with-php-config=/usr/local/bin/php-config` //根据具体的安装路径 make &amp;amp;&amp;amp; make install  最后出现提示：
Installing shared extensions: /path //path可在 php-config 中的extension_dir处设置
接下来在php.ini 中修改
extension_dir=/path extension=mcrypt.so  4.在安装gd扩展的时候 如果出现 configure: error: png.h not found.的错误
需要安装一下 libpng-devel
yum -y install libpng-devel 即可
5.在安装curl扩展的时候如果出现：
configure: error: Please reinstall the libcurl distribution - easy.h should be in /include/curl/  解决办法同4，安装一下curl的devel包就ok了</description>
    </item>
    
    <item>
      <title>magento 1.7.02安装问题</title>
      <link>/post/magento-1.7.02%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 13 Apr 2013 22:40:08 +0800</pubDate>
      
      <guid>/post/magento-1.7.02%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</guid>
      <description>&amp;emsp;&amp;emsp;很明显错误的提示是当前数据库不支持InnoDB storage engine，但是通过show engines命令以及phpinfo()函数查看，mysql的InnodB都是正常的，后来搜到magento中文社区的一篇文章,原因是Mysql 5.6.1版本已经已经丢弃了have_innodb这个函数.而Magento1.7.0.2以下都是使用该函数检测Mysql是否激活了InnodB引擎。而我的数据库版本正好是5.6.10按照文章中的修改方法:
在文件app/code/core/Mage/Install/Model/Installer/Db/Mysql4.php中找到以下代码
$variables = $this-&amp;gt;_getConnection()-&amp;gt;fetchPairs(&#39;SHOW VARIABLES&#39;);  在其后加上:
if (!isset($variables[&#39;have_innodb&#39;])) { $engines = $this-&amp;gt;_getConnection()-&amp;gt;fetchPairs(&#39;SHOW ENGINES&#39;); return (isset($engines[&#39;InnoDB&#39;]) &amp;amp;&amp;amp; ($engines[&#39;InnoDB&#39;] == &#39;DEFAULT&#39; || $engines[&#39;InnoDB&#39;] == &#39;YES&#39;); ...  原来的return语句注释掉或者保留都不会影响。刷新一下即可继续正常安装了。</description>
    </item>
    
  </channel>
</rss>