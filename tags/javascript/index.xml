<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 不足为外人道</title>
    <link>/tags/javascript/</link>
    <description>Recent content in Javascript on 不足为外人道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2013 09:21:14 +0800</lastBuildDate>
    
	<atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>“名不副实”的JSON</title>
      <link>/post/%E5%90%8D%E4%B8%8D%E5%89%AF%E5%AE%9E%E7%9A%84json/</link>
      <pubDate>Wed, 15 May 2013 09:21:14 +0800</pubDate>
      
      <guid>/post/%E5%90%8D%E4%B8%8D%E5%89%AF%E5%AE%9E%E7%9A%84json/</guid>
      <description>JSON (Javascript Object Notation):直接翻译就是javascript的对象表示方法。是一种轻量级的数据交换格式。 易于人阅读和编写。同时也易于机器解析和生成。 它基于JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言。也就是说现在的JSON俨然已经“名不副实”了。
JSON的特点:  JSON 是纯文本
 JSON 具有“自我描述性”（人类可读）
 JSON 具有层级结构（值中存在值）
 JSON 可通过 JavaScript 进行解析
 JSON 数据可使用 AJAX 进行传输
  与XML相比  没有结束标签
 更短
 读写的速度更快
 能够使用内建的 JavaScript eval() 方法进行解析
 使用数组
 不使用保留字
正因为如此JSON大有取缔XML之势  JSON 的语法规则 JSON 语法是 JavaScript 对象表示法语法的子集。</description>
    </item>
    
  </channel>
</rss>